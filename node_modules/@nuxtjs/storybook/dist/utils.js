"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compileTemplate = compileTemplate;
exports.ensureCoreJs3 = ensureCoreJs3;
exports.loadFile = loadFile;
exports.logger = void 0;
exports.normalizeFlags = normalizeFlags;
exports.requireMaybeEdge = requireMaybeEdge;
exports.requireTsNodeOrFail = requireTsNodeOrFail;
exports.tryRequire = tryRequire;

var _fs = _interopRequireDefault(require("fs"));

var _lodash = _interopRequireDefault(require("lodash.template"));

var _jiti = _interopRequireDefault(require("jiti"));

var _consola = _interopRequireDefault(require("consola"));

var _createRequire = _interopRequireDefault(require("create-require"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const logger = _consola.default.withScope("@nuxt/storybook");

exports.logger = logger;

function loadFile(rootDir, file) {
  return (0, _jiti.default)(rootDir)(file) || {};
}

function tryRequire(pkg) {
  try {
    return require(pkg);
  } catch (_e) {}
}

function requireMaybeEdge(pkg) {
  return tryRequire(pkg + "-edge") || tryRequire(pkg);
}

function normalizeFlags(flags) {
  return Object.keys(flags).reduce((acc, flag) => {
    const normalizedFlag = flag.replace(/^--no-/, "").replace("--", "").replace(/-([a-z])/, v => v.replace("-", "").toUpperCase());
    acc[normalizedFlag] = flag.startsWith("--no-") ? !flags[flag] : flags[flag];
    return acc;
  }, {});
}

function compileTemplate(src, destination, templateVars) {
  let content;

  try {
    const fileContent = _fs.default.readFileSync(src, "utf8");

    const templateFunction = (0, _lodash.default)(fileContent);
    content = templateFunction({
      options: templateVars
    });
  } catch (err) {
    throw new Error(`Could not compile template: ${err.message}`);
  }

  _fs.default.writeFileSync(destination, content, "utf8");
}

function ensureCoreJs3(rootDir) {
  const corejsVersion = Number.parseInt((0, _createRequire.default)(rootDir)("core-js/package.json").version.split(".")[0]);

  if (corejsVersion < 3) {
    let nuxtVersion = "";

    try {
      nuxtVersion = (0, _createRequire.default)(rootDir)("nuxt/package.json").version;
    } catch {}

    try {
      nuxtVersion = (0, _createRequire.default)(rootDir)("nuxt-edge/package.json").version;
    } catch {}

    if (nuxtVersion.startsWith("2.14")) {
      logger.error("Storybook requires `core-js@3`. Run `yarn add --dev core-js@3 @babel/runtime-corejs3`");
    } else {
      logger.error("Storybook requires `core-js@3`. See https://github.com/nuxt/nuxt.js/tree/v2.13.3/packages/babel-preset-app#example-2-use-core-js3");
    }

    process.exit(1);
  }
}

function requireTsNodeOrFail() {
  const tsNode = tryRequire("ts-node");

  if (!tsNode) {
    logger.error("Using Storybook within a Typescript project requires installing `ts-node`. Run `yarn add --dev ts-node`");
    process.exit(1);
  }

  return tsNode;
}