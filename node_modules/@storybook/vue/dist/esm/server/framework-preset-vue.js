function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import "core-js/modules/es.promise.js";

/* eslint-disable no-param-reassign */
import { VueLoaderPlugin } from 'vue-loader';
import { findDistEsm } from '@storybook/core-common';
export async function webpack(config, {
  presets: presets
}) {
  var typescriptOptions = await presets.apply('typescript', {});
  config.plugins.push(new VueLoaderPlugin());
  config.module.rules.push({
    test: /\.vue$/,
    loader: require.resolve('vue-loader'),
    options: {}
  });
  config.module.rules.push({
    test: /\.ts$/,
    use: [{
      loader: require.resolve('ts-loader'),
      options: {
        transpileOnly: !typescriptOptions.check,
        appendTsSuffixTo: [/\.vue$/]
      }
    }]
  });
  config.module.rules.push({
    test: /\.tsx$/,
    use: [{
      loader: require.resolve('ts-loader'),
      options: {
        transpileOnly: true,
        appendTsxSuffixTo: [/\.vue$/]
      }
    }]
  });
  config.resolve.extensions.push('.vue');
  config.resolve.alias = _objectSpread(_objectSpread({}, config.resolve.alias), {}, {
    vue$: require.resolve('vue/dist/vue.esm.js')
  });
  return config;
}
export var previewAnnotations = function (entry = []) {
  return [...entry, findDistEsm(__dirname, 'client/preview/config')];
};